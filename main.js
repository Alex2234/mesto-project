(()=>{"use strict";var __webpack_modules__={63:()=>{eval('\n;// CONCATENATED MODULE: ./src/components/constans.js\nvar popupes = document.querySelectorAll(".popup");\nvar editPopup = document.getElementById("popup_info-edit");\nvar editPopupBtn = document.querySelector(".info__edit-button");\nvar closeButtons = document.querySelectorAll(".popup__button-close");\nvar nameInfo = document.querySelector(".info__title");\nvar jobInfo = document.querySelector(".info__subtitle");\nvar ava = document.querySelector(".profile__avatar");\nvar openPopupImage = document.getElementById("popup_image");\nvar popupupImageLink = document.querySelector(".popup__image");\nvar popupImageName = document.querySelector(".popup__title-image");\nvar elementsList = document.querySelector(".elements");\nvar popupAvatar = document.getElementById("popup_avatar");\nvar editAvatarBtn = document.querySelector(".profile__avatar-edit");\nvar inputLinkAva = document.getElementById("input_link-avatar");\nvar infoForm = document.forms["form_info"];\nvar cardForm = document.forms["form_card"];\nvar avatarForm = document.forms["form_avatar"];\nvar nameInput = document.getElementById("input_names");\nvar jobInput = document.getElementById("input_job");\nvar addPopupBtn = document.querySelector(".profile__add-button");\nvar addPopup = document.getElementById("popup_add");\nvar inputNameCard = document.getElementById("input_nameCard");\nvar inputImgCard = document.getElementById("input_link");\nvar myId = {\n  id: " "\n};\nvar saveBtn = document.querySelectorAll(".form__button-save");\nvar settings = {\n  formSelector: "form",\n  inputSelector: "form__input",\n  submitButtonSelector: "form__button-save",\n  inactiveButtonClass: "form__button-save_inactive",\n  inputErrorClass: "form__input_type_error",\n  errorClass: "form__input-error_active"\n};\nvar config = {\n  url: "https://mesto.nomoreparties.co/v1/plus-cohort-20",\n  headers: {\n    authorization: "1cdbbf8d-5825-4273-9e5f-62a7f14e6ef5",\n    "Content-Type": "application/json"\n  }\n};\n;// CONCATENATED MODULE: ./src/components/modal.js\n//Закрытие при нажатии на Esc\nfunction handleEscape(evt) {\n  if (evt.key === "Escape") {\n    var openedPopup = document.querySelector(".popup_opened");\n    closePopup(openedPopup);\n  }\n}\n\n//функция открытия Popup\nfunction openPopup(popup) {\n  popup.classList.add("popup_opened");\n  document.addEventListener("keydown", handleEscape);\n}\n\n//функция закрытия Popup\nfunction closePopup(popup) {\n  popup.classList.remove("popup_opened");\n  document.removeEventListener("keydown", handleEscape);\n}\n\n;// CONCATENATED MODULE: ./src/components/api.js\n\n\n//Функция проверки\nfunction onResponse(res) {\n  return res.ok ? res.json() : Promise.reject("Ошибка на строне сервера");\n}\n\n//Функция запроса информации о юзере с сервера\nfunction infoProfile() {\n  return fetch("".concat(config.url, "/users/me"), {\n    headers: config.headers\n  }).then(onResponse);\n}\n\n//Функция запроса карточек с сервера\nfunction cardsAdd() {\n  return fetch("".concat(config.url, "/cards"), {\n    headers: config.headers\n  }).then(onResponse);\n}\n\n//Функция редактирования профиля\nfunction updateProfile(name, job, id) {\n  return fetch("".concat(config.url, "/users/me"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: job,\n      _id: id\n    })\n  }).then(onResponse);\n}\n\n//Функция добавления новой карточки\nfunction addCard(name, link) {\n  return fetch("".concat(config.url, "/cards"), {\n    method: "POST",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(onResponse);\n}\n\n//Функция удаления карточки\nfunction deleteCard(idcard) {\n  return fetch("".concat(config.url, "/cards/").concat(idcard), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(onResponse);\n}\n\n//Функция постановки лайка\nfunction putLike(idcard) {\n  return fetch("".concat(config.url, "/cards/likes/").concat(idcard), {\n    method: "PUT",\n    headers: config.headers\n  }).then(onResponse);\n}\n\n//Функция удаления лайка\nfunction deleteLike(idcard) {\n  return fetch("".concat(config.url, "/cards/likes/").concat(idcard), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(onResponse);\n}\n\n//Функция изменения аватара\nfunction editAvatar(ava) {\n  return fetch("".concat(config.url, "/users/me/avatar"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: ava\n    })\n  }).then(onResponse);\n}\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\n\n\n//Функция создания карточек\nfunction createCard(card, myid) {\n  var elementTemplate = document.querySelector("#card").content;\n  var elementCard = elementTemplate.querySelector(".element").cloneNode(true);\n  var cardFoto = elementCard.querySelector(".element__foto");\n  var cardTitle = elementCard.querySelector(".element__title");\n  var like = elementCard.querySelector(".element__like");\n  var likeCount = elementCard.querySelector(".element__counter-like");\n  cardFoto.src = card.link;\n  cardFoto.alt = card.name;\n  cardTitle.textContent = card.name;\n  likeCount.textContent = card.likes.length;\n  cardFoto.addEventListener("click", function () {\n    openPopup(openPopupImage);\n    popupupImageLink.src = card.link;\n    popupupImageLink.alt = card.name;\n    popupImageName.textContent = card.name;\n  });\n  elementCard.querySelector(".element__delete").addEventListener("click", function (evt) {\n    deleteCard(card._id).then(function () {\n      elementCard.remove();\n    }).catch(function (err) {\n      console.log(err);\n    });\n  });\n  like.addEventListener("click", function () {\n    if (!like.classList.contains("element__like_active")) {\n      putLike(card._id).then(function (data) {\n        like.classList.add("element__like_active");\n        likeCount.textContent = data.likes.length;\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } else {\n      deleteLike(card._id).then(function (data) {\n        like.classList.remove("element__like_active");\n        likeCount.textContent = data.likes.length;\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  });\n  card.likes.forEach(function (item) {\n    if (myid === item._id) {\n      like.classList.add("element__like_active");\n    }\n  });\n  if (myid !== card.owner._id) {\n    elementCard.querySelector(".element__delete").classList.add("element__delete_inactive");\n  }\n  return elementCard;\n}\n\n;// CONCATENATED MODULE: ./src/components/validate.js\nfunction showInputError(formElement, inputElement, errorMessage, settings) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.add("".concat(settings.inputErrorClass));\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add("".concat(settings.errorClass));\n}\nfunction hideInputError(formElement, inputElement, settings) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.remove("".concat(settings.inputErrorClass));\n  errorElement.classList.remove("".concat(settings.errorClass));\n  errorElement.textContent = "";\n}\nfunction checkInputValidity(formElement, inputElement, settings) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity("");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, settings);\n  } else {\n    hideInputError(formElement, inputElement, settings);\n  }\n}\nfunction setEventListeners(formElement, settings) {\n  var inputList = Array.from(formElement.querySelectorAll(".".concat(settings.inputSelector)));\n  var buttonElement = formElement.querySelector(".".concat(settings.submitButtonSelector));\n  toggleButtonState(inputList, buttonElement, settings);\n  formElement.parentElement.addEventListener("reset", function () {\n    setTimeout(function () {\n      toggleButtonState(inputList, buttonElement, settings);\n    }, 0);\n  });\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener("input", function () {\n      checkInputValidity(formElement, inputElement, settings);\n      toggleButtonState(inputList, buttonElement, settings);\n    });\n  });\n}\nfunction enableValidation(settings) {\n  var formList = Array.from(document.querySelectorAll(".".concat(settings.formSelector)));\n  formList.forEach(function (formElement) {\n    formElement.addEventListener("submit", function (evt) {\n      evt.preventDefault();\n    });\n    setEventListeners(formElement, settings);\n  });\n}\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n}\nfunction toggleButtonState(inputList, buttonElement, settings) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add("".concat(settings.inactiveButtonClass));\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove("".concat(settings.inactiveButtonClass));\n  }\n}\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n//Закрытие при нажатии на Крестик\ncloseButtons.forEach(function (button) {\n  var popup = button.closest(".popup");\n  button.addEventListener("click", function () {\n    return closePopup(popup);\n  });\n});\n\n// Закрытие при нажатии на Оверлей\npopupes.forEach(function (popup) {\n  popup.addEventListener("click", function (evt) {\n    if (evt.target === evt.currentTarget) {\n      closePopup(popup);\n    }\n  });\n});\n\n//Открытие попапа редактирование профиля\neditPopupBtn.addEventListener("click", function () {\n  openPopup(editPopup);\n  nameInput.value = nameInfo.textContent;\n  jobInput.value = jobInfo.textContent;\n});\n\n//Загрузка информации о юзере с сервера\ninfoProfile().then(function (data) {\n  nameInfo.textContent = data.name;\n  jobInfo.textContent = data.about;\n  ava.src = data.avatar;\n  myId.id = data._id;\n}).catch(function (err) {\n  console.log(err);\n});\n\n//Загрузка карточек с сервера\ncardsAdd().then(function (data) {\n  data.forEach(function (item) {\n    elementsList.append(createCard(item, myId.id));\n  });\n}).catch(function (err) {\n  console.log(err);\n});\n\n//Функция демонстрации процесса загрузки\nfunction renderLoading(isLoading, textTrue, textFalse) {\n  if (isLoading) {\n    saveBtn.textContent = textTrue;\n  } else {\n    saveBtn.textContent = textFalse;\n  }\n}\n\n//Функция обработчика формы с данными профиля\nfunction handleInfoFormSubmit(evt) {\n  evt.preventDefault();\n  var nameI = nameInput.value;\n  var jobI = jobInput.value;\n  renderLoading(true, "Сохранение...", "Сохранить");\n  updateProfile(nameI, jobI, myId).then(function (data) {\n    nameInfo.textContent = data.name;\n    jobInfo.textContent = data.about;\n    myId.id = data._id;\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    renderLoading(false, "Сохранение...", "Сохранить");\n  });\n  closePopup(editPopup);\n}\n\n//Сохранение данных профиля\ninfoForm.addEventListener("submit", handleInfoFormSubmit);\n\n//Открытие попапа добавления карточек\naddPopupBtn.addEventListener("click", function () {\n  openPopup(addPopup);\n});\n\n//Функция обработчика формы с карточками\nfunction handleCardFormSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(true, "Создание...", "Создать");\n  addCard(inputNameCard.value, inputImgCard.value).then(function (data) {\n    elementsList.prepend(createCard(data));\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    renderLoading(false, "Создание...", "Создать");\n  });\n  closePopup(addPopup);\n}\n\n//Сохранение карточки\ncardForm.addEventListener("submit", handleCardFormSubmit);\n\n//Открытие попапа изменения аватара\neditAvatarBtn.addEventListener("click", function () {\n  openPopup(popupAvatar);\n});\n\n//Функция обработчика формы с аватаркой\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(true, "Сохранение...", "Сохранить");\n  editAvatar(inputLinkAva.value).then(function (data) {\n    ava.src = data.avatar;\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    renderLoading(false, "Сохранение...", "Сохранить");\n  });\n  closePopup(popupAvatar);\n}\n\n//Сохранение аватара\navatarForm.addEventListener("submit", handleAvatarFormSubmit);\n\n//Валидация форм\nenableValidation(settings);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///63\n')}},__webpack_exports__={};__webpack_modules__[63]()})();